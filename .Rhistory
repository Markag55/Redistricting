source("~/Gerrymander/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
getwd()
getwd()
setwd(getwd())
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
getwd()
setwd(getwd())
OHEnacted <- read.csv("OH-Enacted.csv", header = TRUE) #Get Ohio Enacted Map
OHProp <- read.csv("OH-Proportional.csv", header=TRUE) #Get Ohio Fair Map
ILEnacted <- read.csv("IL-Enacted.csv", header=TRUE)   #Get Illinois Enacted Map
ILProp <- read.csv("IL-Proportional.csv", header=TRUE) #Get Illinois Fair Map
COEnacted <- read.csv("CO-Enacted.csv", header=TRUE)   #Get Colorado Enacted Map
COProp <- read.csv("CO-Proportional.csv", header=TRUE) #Get Colorado Fair Map
MIEnacted <- read.csv("MI-Enacted.csv", header=TRUE)   #Get Michigan Enacted Map
MIProp <- read.csv("MI-Proportional.csv", header=TRUE) #Get Michigan Fair Map
VAEnacted <- read.csv("VA-Enacted.csv", header=TRUE)   #Get Virginia Enacted Map
VAProp <- read.csv("VA-Prop.csv", header=TRUE)         #Get Virginia Fair Map
AZEnacted <- read.csv("AZ-Enacted.csv", header=TRUE)   #Get Arizona Enacted Map
AZProp <- read.csv("AZ-Prop.csv", header=TRUE)         #Get Arizona Fair Map
Map_Score <- function(Map1, Map2, Size, Begin) {
numOfCompetitive1 = 0
numOfD1 = 0;
numOfR1 = 0;
numOfCompetitive2 = 0
numOfD2 = 0
numOfR2 = 0
Competitvness1 <- Map1[2:(Size+1),Begin]-Map1[2:(Size+1),(Begin+1)] #Find the partisan advantage of each district
Competitvness2 <- Map2[2:(Size+1),Begin]-Map2[2:(Size+1),(Begin+1)]
#print(Map1[2:(Size+1),Begin:(Begin+1)])
#print(Map2[2:(Size+1),Begin:(Begin+1)])
print(Competitvness1)
print(Competitvness2)
for (i in Competitvness1[1:Size])
{
if (abs(i) <= 0.1)
{
numOfCompetitive1 = numOfCompetitive1 + 1 #Add to the number of competitive districts in Map1
}
else if(i > 0.1)
{
numOfD1 = numOfD1 + 1 #Add to the number of Democratic districts in Map1
}
else if(i < 0.1)
{
numOfR1 = numOfR1 +1 #Add to the number of Republican districts in Map1
}
}
for (j in Competitvness2[1:Size])
{
if (abs(j) <= 0.1)
{
numOfCompetitive2 = numOfCompetitive2 + 1 #Add to the number of competitive districts in Map2
}
else if(j > 0.1)
{
numOfD2 = numOfD2 + 1 #Add to the number of Democratic districts in Map2
}
else if(j < 0.1)
{
numOfR2 = numOfR2 +1 #Add to the number of Republican districts in Map2
}
}
#print(numOfCompetitive1)
#print(numOfCompetitive2)
CompetitveDifferance <- abs(numOfCompetitive1-numOfCompetitive2) #Get the difference of competitive districts between Map1 and Map2
DifferenceD <- abs(numOfD1-numOfD2) #Get the difference of Democratic districts between Map1 and Map2
DifferenceR <- abs(numOfR1-numOfR2) #Get the difference of Republican districts between Map1 and Map2
return((CompetitveDifferance+DifferenceD+DifferenceR)/Size) #Add the differences between competitive, Democrat, and Republican districts and divide by the number of districts to get the fairness score
}
AZScore <- Map_Score(AZEnacted, AZProp, 9, 3)
getwd()
setwd(getwd())
OHEnacted <- read.csv("OH-Enacted.csv", header = TRUE) #Get Ohio Enacted Map
OHProp <- read.csv("OH-Proportional.csv", header=TRUE) #Get Ohio Fair Map
ILEnacted <- read.csv("IL-Enacted.csv", header=TRUE)   #Get Illinois Enacted Map
ILProp <- read.csv("IL-Proportional.csv", header=TRUE) #Get Illinois Fair Map
COEnacted <- read.csv("CO-Enacted.csv", header=TRUE)   #Get Colorado Enacted Map
COProp <- read.csv("CO-Proportional.csv", header=TRUE) #Get Colorado Fair Map
MIEnacted <- read.csv("MI-Enacted.csv", header=TRUE)   #Get Michigan Enacted Map
MIProp <- read.csv("MI-Proportional.csv", header=TRUE) #Get Michigan Fair Map
VAEnacted <- read.csv("VA-Enacted.csv", header=TRUE)   #Get Virginia Enacted Map
VAProp <- read.csv("VA-Prop.csv", header=TRUE)         #Get Virginia Fair Map
AZEnacted <- read.csv("AZ-Enacted.csv", header=TRUE)   #Get Arizona Enacted Map
AZProp <- read.csv("AZ-Prop.csv", header=TRUE)         #Get Arizona Fair Map
Map_Score <- function(Map1, Map2, Size, Begin) {
numOfCompetitive1 = 0
numOfD1 = 0;
numOfR1 = 0;
numOfCompetitive2 = 0
numOfD2 = 0
numOfR2 = 0
Competitvness1 <- Map1[2:(Size+1),Begin]-Map1[2:(Size+1),(Begin+1)] #Find the partisan advantage of each district
Competitvness2 <- Map2[2:(Size+1),Begin]-Map2[2:(Size+1),(Begin+1)]
print(Map1[2:(Size+1),Begin:(Begin+1)])
print(Map2[2:(Size+1),Begin:(Begin+1)])
#print(Competitvness1)
#print(Competitvness2)
for (i in Competitvness1[1:Size])
{
if (abs(i) <= 0.1)
{
numOfCompetitive1 = numOfCompetitive1 + 1 #Add to the number of competitive districts in Map1
}
else if(i > 0.1)
{
numOfD1 = numOfD1 + 1 #Add to the number of Democratic districts in Map1
}
else if(i < 0.1)
{
numOfR1 = numOfR1 +1 #Add to the number of Republican districts in Map1
}
}
for (j in Competitvness2[1:Size])
{
if (abs(j) <= 0.1)
{
numOfCompetitive2 = numOfCompetitive2 + 1 #Add to the number of competitive districts in Map2
}
else if(j > 0.1)
{
numOfD2 = numOfD2 + 1 #Add to the number of Democratic districts in Map2
}
else if(j < 0.1)
{
numOfR2 = numOfR2 +1 #Add to the number of Republican districts in Map2
}
}
#print(numOfCompetitive1)
#print(numOfCompetitive2)
CompetitveDifferance <- abs(numOfCompetitive1-numOfCompetitive2) #Get the difference of competitive districts between Map1 and Map2
DifferenceD <- abs(numOfD1-numOfD2) #Get the difference of Democratic districts between Map1 and Map2
DifferenceR <- abs(numOfR1-numOfR2) #Get the difference of Republican districts between Map1 and Map2
return((CompetitveDifferance+DifferenceD+DifferenceR)/Size) #Add the differences between competitive, Democrat, and Republican districts and divide by the number of districts to get the fairness score
}
AZScore <- Map_Score(AZEnacted, AZProp, 9, 3)
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
getwd()
setwd(getwd())
OHEnacted <- read.csv("OH-Enacted.csv", header = TRUE) #Get Ohio Enacted Map
OHProp <- read.csv("OH-Proportional.csv", header=TRUE) #Get Ohio Fair Map
ILEnacted <- read.csv("IL-Enacted.csv", header=TRUE)   #Get Illinois Enacted Map
ILProp <- read.csv("IL-Proportional.csv", header=TRUE) #Get Illinois Fair Map
COEnacted <- read.csv("CO-Enacted.csv", header=TRUE)   #Get Colorado Enacted Map
COProp <- read.csv("CO-Proportional.csv", header=TRUE) #Get Colorado Fair Map
MIEnacted <- read.csv("MI-Enacted.csv", header=TRUE)   #Get Michigan Enacted Map
MIProp <- read.csv("MI-Proportional.csv", header=TRUE) #Get Michigan Fair Map
VAEnacted <- read.csv("VA-Enacted.csv", header=TRUE)   #Get Virginia Enacted Map
VAProp <- read.csv("VA-Prop.csv", header=TRUE)         #Get Virginia Fair Map
AZEnacted <- read.csv("AZ-Enacted.csv", header=TRUE)   #Get Arizona Enacted Map
AZProp <- read.csv("AZ-Prop.csv", header=TRUE)         #Get Arizona Fair Map
CAEnacted <- read.csv("CA-Enacted.csv", header=TRUE)   #Get California Enacted Map
CAProp <- read.csv("CA-Prop.csv", header=TRUE)         #Get California Enacted Map
Map_Score <- function(Map1, Map2, Size, Begin) {
numOfCompetitive1 = 0
numOfD1 = 0;
numOfR1 = 0;
numOfCompetitive2 = 0
numOfD2 = 0
numOfR2 = 0
Competitvness1 <- Map1[2:(Size+1),Begin]-Map1[2:(Size+1),(Begin+1)] #Find the partisan advantage of each district
Competitvness2 <- Map2[2:(Size+1),Begin]-Map2[2:(Size+1),(Begin+1)]
print(Map1[2:(Size+1),Begin:(Begin+1)])
print(Map2[2:(Size+1),Begin:(Begin+1)])
#print(Competitvness1)
#print(Competitvness2)
for (i in Competitvness1[1:Size])
{
if (abs(i) <= 0.1)
{
numOfCompetitive1 = numOfCompetitive1 + 1 #Add to the number of competitive districts in Map1
}
else if(i > 0.1)
{
numOfD1 = numOfD1 + 1 #Add to the number of Democratic districts in Map1
}
else if(i < 0.1)
{
numOfR1 = numOfR1 +1 #Add to the number of Republican districts in Map1
}
}
for (j in Competitvness2[1:Size])
{
if (abs(j) <= 0.1)
{
numOfCompetitive2 = numOfCompetitive2 + 1 #Add to the number of competitive districts in Map2
}
else if(j > 0.1)
{
numOfD2 = numOfD2 + 1 #Add to the number of Democratic districts in Map2
}
else if(j < 0.1)
{
numOfR2 = numOfR2 +1 #Add to the number of Republican districts in Map2
}
}
#print(numOfCompetitive1)
#print(numOfCompetitive2)
CompetitveDifferance <- abs(numOfCompetitive1-numOfCompetitive2) #Get the difference of competitive districts between Map1 and Map2
DifferenceD <- abs(numOfD1-numOfD2) #Get the difference of Democratic districts between Map1 and Map2
DifferenceR <- abs(numOfR1-numOfR2) #Get the difference of Republican districts between Map1 and Map2
return((CompetitveDifferance+DifferenceD+DifferenceR)/Size) #Add the differences between competitive, Democrat, and Republican districts and divide by the number of districts to get the fairness score
}
CAScore <- Map_Score(CAEnacted, CAProp, 52, 3)
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
getwd()
setwd(getwd())
OHEnacted <- read.csv("OH-Enacted.csv", header = TRUE) #Get Ohio Enacted Map
OHProp <- read.csv("OH-Proportional.csv", header=TRUE) #Get Ohio Fair Map
ILEnacted <- read.csv("IL-Enacted.csv", header=TRUE)   #Get Illinois Enacted Map
ILProp <- read.csv("IL-Proportional.csv", header=TRUE) #Get Illinois Fair Map
COEnacted <- read.csv("CO-Enacted.csv", header=TRUE)   #Get Colorado Enacted Map
COProp <- read.csv("CO-Proportional.csv", header=TRUE) #Get Colorado Fair Map
MIEnacted <- read.csv("MI-Enacted.csv", header=TRUE)   #Get Michigan Enacted Map
MIProp <- read.csv("MI-Proportional.csv", header=TRUE) #Get Michigan Fair Map
VAEnacted <- read.csv("VA-Enacted.csv", header=TRUE)   #Get Virginia Enacted Map
VAProp <- read.csv("VA-Prop.csv", header=TRUE)         #Get Virginia Fair Map
AZEnacted <- read.csv("AZ-Enacted.csv", header=TRUE)   #Get Arizona Enacted Map
AZProp <- read.csv("AZ-Prop.csv", header=TRUE)         #Get Arizona Fair Map
CAEnacted <- read.csv("CA-Enacted.csv", header=TRUE)   #Get California Enacted Map
CAProp <- read.csv("CA-Prop.csv", header=TRUE)         #Get California Enacted Map
TXEnacted <- read.csv("TX-Enacted.csv", header=TRUE)   #Get Texas Enacted Map
TXProp <- read.csv("TX-Prop.csv", header=TRUE)         #Get Texas Fair Map
Map_Score <- function(Map1, Map2, Size, Begin) {
numOfCompetitive1 = 0
numOfD1 = 0;
numOfR1 = 0;
numOfCompetitive2 = 0
numOfD2 = 0
numOfR2 = 0
Competitvness1 <- Map1[2:(Size+1),Begin]-Map1[2:(Size+1),(Begin+1)] #Find the partisan advantage of each district
Competitvness2 <- Map2[2:(Size+1),Begin]-Map2[2:(Size+1),(Begin+1)]
print(Map1[2:(Size+1),Begin:(Begin+1)])
print(Map2[2:(Size+1),Begin:(Begin+1)])
#print(Competitvness1)
#print(Competitvness2)
for (i in Competitvness1[1:Size])
{
if (abs(i) <= 0.1)
{
numOfCompetitive1 = numOfCompetitive1 + 1 #Add to the number of competitive districts in Map1
}
else if(i > 0.1)
{
numOfD1 = numOfD1 + 1 #Add to the number of Democratic districts in Map1
}
else if(i < 0.1)
{
numOfR1 = numOfR1 +1 #Add to the number of Republican districts in Map1
}
}
for (j in Competitvness2[1:Size])
{
if (abs(j) <= 0.1)
{
numOfCompetitive2 = numOfCompetitive2 + 1 #Add to the number of competitive districts in Map2
}
else if(j > 0.1)
{
numOfD2 = numOfD2 + 1 #Add to the number of Democratic districts in Map2
}
else if(j < 0.1)
{
numOfR2 = numOfR2 +1 #Add to the number of Republican districts in Map2
}
}
#print(numOfCompetitive1)
#print(numOfCompetitive2)
CompetitveDifferance <- abs(numOfCompetitive1-numOfCompetitive2) #Get the difference of competitive districts between Map1 and Map2
DifferenceD <- abs(numOfD1-numOfD2) #Get the difference of Democratic districts between Map1 and Map2
DifferenceR <- abs(numOfR1-numOfR2) #Get the difference of Republican districts between Map1 and Map2
return((CompetitveDifferance+DifferenceD+DifferenceR)/Size) #Add the differences between competitive, Democrat, and Republican districts and divide by the number of districts to get the fairness score
}
TXScore <- Map_Score(TXEnacted, TXProp, 38, 3)
source("~/GitHub/Redistricting/Gerrymander Script.R")
source("~/GitHub/Redistricting/Gerrymander Script.R")
getwd()
setwd(getwd())
OHEnacted <- read.csv("OH-Enacted.csv", header = TRUE) #Get Ohio Enacted Map
OHProp <- read.csv("OH-Proportional.csv", header=TRUE) #Get Ohio Fair Map
ILEnacted <- read.csv("IL-Enacted.csv", header=TRUE)   #Get Illinois Enacted Map
ILProp <- read.csv("IL-Proportional.csv", header=TRUE) #Get Illinois Fair Map
COEnacted <- read.csv("CO-Enacted.csv", header=TRUE)   #Get Colorado Enacted Map
COProp <- read.csv("CO-Proportional.csv", header=TRUE) #Get Colorado Fair Map
MIEnacted <- read.csv("MI-Enacted.csv", header=TRUE)   #Get Michigan Enacted Map
MIProp <- read.csv("MI-Proportional.csv", header=TRUE) #Get Michigan Fair Map
VAEnacted <- read.csv("VA-Enacted.csv", header=TRUE)   #Get Virginia Enacted Map
VAProp <- read.csv("VA-Prop.csv", header=TRUE)         #Get Virginia Fair Map
AZEnacted <- read.csv("AZ-Enacted.csv", header=TRUE)   #Get Arizona Enacted Map
AZProp <- read.csv("AZ-Prop.csv", header=TRUE)         #Get Arizona Fair Map
CAEnacted <- read.csv("CA-Enacted.csv", header=TRUE)   #Get California Enacted Map
CAProp <- read.csv("CA-Prop.csv", header=TRUE)         #Get California Enacted Map
TXEnacted <- read.csv("TX-Enacted.csv", header=TRUE)   #Get Texas Enacted Map
TXProp <- read.csv("TX-Prop.csv", header=TRUE)         #Get Texas Fair Map
NCEnacted <- read.csv("NC-Enacted.csv", header=TRUE)   #Get North Carolina Enacted Map
NCProp <- read.csv("NC-Prop.csv", header=TRUE)         #Get North Carolina Fair Map
Map_Score <- function(Map1, Map2, Size, Begin) {
numOfCompetitive1 = 0
numOfD1 = 0;
numOfR1 = 0;
numOfCompetitive2 = 0
numOfD2 = 0
numOfR2 = 0
Competitvness1 <- Map1[2:(Size+1),Begin]-Map1[2:(Size+1),(Begin+1)] #Find the partisan advantage of each district
Competitvness2 <- Map2[2:(Size+1),Begin]-Map2[2:(Size+1),(Begin+1)]
print(Map1[2:(Size+1),Begin:(Begin+1)])
print(Map2[2:(Size+1),Begin:(Begin+1)])
#print(Competitvness1)
#print(Competitvness2)
for (i in Competitvness1[1:Size])
{
if (abs(i) <= 0.1)
{
numOfCompetitive1 = numOfCompetitive1 + 1 #Add to the number of competitive districts in Map1
}
else if(i > 0.1)
{
numOfD1 = numOfD1 + 1 #Add to the number of Democratic districts in Map1
}
else if(i < 0.1)
{
numOfR1 = numOfR1 +1 #Add to the number of Republican districts in Map1
}
}
for (j in Competitvness2[1:Size])
{
if (abs(j) <= 0.1)
{
numOfCompetitive2 = numOfCompetitive2 + 1 #Add to the number of competitive districts in Map2
}
else if(j > 0.1)
{
numOfD2 = numOfD2 + 1 #Add to the number of Democratic districts in Map2
}
else if(j < 0.1)
{
numOfR2 = numOfR2 +1 #Add to the number of Republican districts in Map2
}
}
#print(numOfCompetitive1)
#print(numOfCompetitive2)
CompetitveDifferance <- abs(numOfCompetitive1-numOfCompetitive2) #Get the difference of competitive districts between Map1 and Map2
DifferenceD <- abs(numOfD1-numOfD2) #Get the difference of Democratic districts between Map1 and Map2
DifferenceR <- abs(numOfR1-numOfR2) #Get the difference of Republican districts between Map1 and Map2
return((CompetitveDifferance+DifferenceD+DifferenceR)/Size) #Add the differences between competitive, Democrat, and Republican districts and divide by the number of districts to get the fairness score
}
NCScore <- Map_Score(NCEnacted, NCProp, 14, 3)
source("~/GitHub/Redistricting/Gerrymander Script.R")
